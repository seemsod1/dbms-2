{{template "base" .}}

{{define "content"}}
    <div class="container">
        <a href="/">< return to home page</a>
        <h1>rents</h1>
        <table class="table table-striped">
            <thead>
            <tr>
                <th>ID</th>
                <th>UserID</th>
                <th>CarID</th>
                <th>Total</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            {{range .Data.Rents}}
                <tr data-id="{{.ID}}">
                    <td>{{.ID}}</td>
                    <td>{{.UserID}}</td>
                    <td>{{.CarID}}</td>
                    <td>{{.Total}}</td>
                    <td>
                        <button class="btn btn-primary edit-btn">Edit</button>
                        <button class="btn btn-danger delete-btn">Delete</button>
                    </td>
                </tr>
            {{end}}
            <tr>
                <form id="addForm">
                    <td id="lastRow"></td>
                    <td><input type="text" class="form-control" placeholder="User ID" name="userID" required></td>
                    <td><input type="text" class="form-control" placeholder="Car ID" name="carID" required></td>
                    <td><input type="text" class="form-control" placeholder="Total" name="total" required></td>
                    <td><button type="submit" class="btn btn-success">Add</button></td>
                </form>
            </tr>
            </tbody>
        </table>
    </div>
{{end}}

{{define "js"}}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.body.addEventListener('click', function (event) {
                if (event.target.classList.contains('edit-btn')) {
                    const row = event.target.closest('tr');
                    const id = row.getAttribute('data-id');
                    const userID = row.cells[1].textContent;
                    const carID = row.cells[2].textContent;
                    const total = row.cells[3].textContent;

                    Swal.fire({
                        title: 'Edit Rent',
                        html: `
                    <input id="swal-input1" class="swal2-input" value="${userID}" placeholder="Brand Name">
                    <input id="swal-input2" class="swal2-input" value="${carID}" placeholder="Model Name">
                    <input id="swal-input3" class="swal2-input" value="${total}" placeholder="Year">
                `,
                        focusConfirm: false,
                        showCancelButton: true,
                        confirmButtonText: 'Save',
                        cancelButtonText: 'Cancel',
                        preConfirm: () => {
                            return [
                                document.getElementById('swal-input1').value,
                                document.getElementById('swal-input2').value,
                                document.getElementById('swal-input3').value
                            ];
                        },
                    }).then(result => {
                        if (result.isConfirmed) {
                            const [userID, carID, total] = result.value;
                            if (validate(userID, carID, total)) {
                                $.ajax({
                                    method: 'PUT',
                                    url: `/rents/update`,
                                    data: { id, userID, carID, total },
                                    success: function () {
                                        row.cells[1].textContent = userID;
                                        row.cells[2].textContent = carID;
                                        row.cells[3].textContent = total;
                                        notify('Rent updated', 'success');
                                    },
                                    error: function () {
                                        notify('Server error', 'error');
                                    }
                                });
                            } else {
                                notify('Invalid input', 'error');
                            }
                        }
                    });
                } else if (event.target.classList.contains('delete-btn')) {
                    const row = event.target.closest('tr');
                    const id = row.getAttribute('data-id');

                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You will not be able to recover this rent!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, keep it'
                    }).then(result => {
                        if (result.isConfirmed) {
                            $.ajax({
                                method: 'DELETE',
                                url: `/rents/delete/${id}`,
                                success: function () {
                                    row.remove();
                                    notify('Car deleted', 'success');
                                },
                                error: function () {
                                    notify('Server error', 'error');
                                }
                            });
                        }
                    });
                }
            });

            // Add form submit event listener
            $('#addForm').submit(function (e) {
                e.preventDefault();
                const userID = this.userID.value;
                const carID = this.carID.value;
                const total = this.total.value;

                if (validate(userID, carID, total)) {
                    $.ajax({
                        method: 'POST',
                        url: '/rents/create',
                        data: { userID, carID, total },
                        success: function (data) {
                            const parsedData = JSON.parse(data);
                            const table = document.querySelector('tbody');
                            const newRow = table.insertRow(table.rows.length - 1);
                            newRow.setAttribute('data-id', parsedData.ID);
                            newRow.innerHTML = `
                        <td>${parsedData.ID}</td>
                        <td>${userID}</td>
                        <td>${carID}</td>
                        <td>${total}</td>
                        <td>
                            <button class="btn btn-primary edit-btn">Edit</button>
                            <button class="btn btn-danger delete-btn">Delete</button>
                        </td>
                    `;
                            document.getElementById('addForm').reset();
                            notify('Car added', 'success');
                        },
                        error: function () {
                            notify('Server error', 'error');
                        }
                    });
                } else {
                    notify('Invalid input', 'error');
                }
            });
        });

        function validate(total, userID, carID ){
            if (total.trim() === '' || userID.trim() === '' || carID.trim() === '') {
                return false;
            }
           return !(isNaN(total) || isNaN(userID) || isNaN(carID) || total < 0 || userID < 0 || carID < 0);
        }
    </script>
{{end}}
